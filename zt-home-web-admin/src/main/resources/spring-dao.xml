<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:bean="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- 开启注解扫描 -->
	<context:component-scan base-package="com.zhangtao.zt.home.web.admin.dao"></context:component-scan>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:zthome.properties"/>
		<!-- 配置数据源，建立数据源对象 -->
	<!-- 数据源配置, 使用 Druid 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="${jdbc.driverClass}"/>

		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.connectionURL}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${jdbc.pool.init}"/>
		<property name="minIdle" value="${jdbc.pool.minIdle}"/>
		<property name="maxActive" value="${jdbc.pool.maxActive}"/>

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000"/>

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000"/>

		<property name="validationQuery" value="${jdbc.testSql}"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat"/>
	</bean>

	<!-- 配置sqlSessionFactoryBean，
		建立sqlSessionFactory对象-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	<!-- 建一并得到指定dao接口的实现类
	（由Mybatis自动生成） -->
	<!--用这个bean配置，直接生成指定包下的dao接口实现类， 下面注释掉的东西是真的有点low-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zhangtao.zt.home.web.admin.dao"/>
	</bean>

	<!--在此我只想说一句，学校的教育是真的有点水，好捞啊，卧槽，你在教尼玛呢，ca操你妈的臭弟弟-->

	<!--TbUserDao的实现类-->
	<!--<bean id="tbUserDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory"
			ref="sqlSessionFactory"/>
		<property name="mapperInterface"
			value="com.zhangtao.zt.home.dao.TbUserDao"
		/>
	</bean>
	&lt;!&ndash;TbContentDao的实现类&ndash;&gt;
	<bean id="tbContentDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory"
				  ref="sqlSessionFactory"/>
		<property name="mapperInterface"
				  value="com.zhangtao.zt.home.dao.TbContentDao"
		/>
	</bean>
	&lt;!&ndash;TbCommentDao的实现类&ndash;&gt;
	<bean id="tbCommentDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory"
				  ref="sqlSessionFactory"/>
		<property name="mapperInterface"
				  value="com.zhangtao.zt.home.dao.TbCommentDao"
		/>
	</bean>-->

</beans>









